{"version":3,"sources":["C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/$_lazy_route_resource lazy","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app-routing.module.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.css","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.html","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.module.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.css","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.html","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.service.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.css","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.html","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.service.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/values.pipe.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/environments/environment.ts","C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { BasicComponent }   from './basic/basic.component';\r\nimport { ContactComponent }   from './contact/contact.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/basic', pathMatch: 'full' },\r\n  { path: 'basic',  component: BasicComponent },\r\n  { path: 'contact',  component: ContactComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes, { useHash: true } ) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<header>\\n  <div class=\\\"header-content\\\"><h1>BotDetect Angular CAPTCHA Examples</h1></div>\\n</header>\\n\\n<nav>\\n  <ul class=\\\"nav\\\">\\n    <li><a routerLink=\\\"/basic\\\" routerLinkActive=\\\"active\\\">Basic Example</a></li>\\n    <li><a routerLink=\\\"/contact\\\" routerLinkActive=\\\"active\\\">Contact Example</a></li>\\n  </ul>\\n</nav>\\n\\n<section id=\\\"main-content\\\">\\n  <router-outlet></router-outlet>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BotDetectCaptchaModule } from 'angular-captcha';\n\nimport { AppComponent } from './app.component';\nimport { BasicComponent }   from './basic/basic.component';\nimport { ContactComponent }   from './contact/contact.component';\n\nimport { ValuesPipe } from './values.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasicComponent,\n    ContactComponent,\n    ValuesPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BotDetectCaptchaModule.forRoot({\n      captchaEndpoint: 'captcha-endpoint/simple-botdetect.php',\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\r\\n  display: block;\\r\\n  margin-bottom: 5px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\nlabel span {\\r\\n  display: block;\\r\\n  margin-bottom: 3px;\\r\\n  font-weight: bold;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"],\\r\\ninput[type=\\\"email\\\"] {\\r\\n  width: 261px;\\r\\n  height: 25px;\\r\\n  padding: 0 5px;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.alert-success {\\r\\n  background: #5db95d;\\r\\n  color: #fff;\\r\\n  border: 1px solid #4e974e;\\r\\n}\\r\\n\\r\\n.alert-error {\\r\\n  background: #db4f4a;\\r\\n  color: #fff;\\r\\n  border: 1px solid #b0352f;\\r\\n}\\r\\n\\r\\n.error {\\r\\n  color: red;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.css\n// module id = ../../../../../src/app/basic/basic.component.css\n// module chunks = main","module.exports = \"<form novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"validate(f.value, f.valid)\\\">\\r\\n\\r\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessages\\\">\\r\\n    {{ successMessages }}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"alert alert-error\\\" *ngIf=\\\"errorMessages\\\">\\r\\n    {{ errorMessages }}\\r\\n  </div>\\r\\n\\r\\n  <!-- show captcha html -->\\r\\n  <botdetect-captcha styleName=\\\"angularBasicCaptcha\\\"></botdetect-captcha>  \\r\\n\\r\\n  <label>\\r\\n    <span>Retype the characters from the picture:</span>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      id=\\\"captchaCode\\\"\\r\\n      name=\\\"captchaCode\\\"\\r\\n      ngModel\\r\\n      #captchaCode=\\\"ngModel\\\"\\r\\n      correctCaptcha\\r\\n      >\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error\\\"\\r\\n    *ngIf=\\\"captchaCode.errors?.incorrectCaptcha && !captchaCode.pristine\\\"\\r\\n    >\\r\\n    Incorrect code.\\r\\n  </div>\\r\\n\\r\\n  <button type=\\\"submit\\\" [disabled]=\\\"f.invalid\\\">Validate</button>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.html\n// module id = ../../../../../src/app/basic/basic.component.html\n// module chunks = main","import { Component, ViewChild } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { CaptchaComponent } from 'angular-captcha';\r\n\r\nimport { BasicService } from './basic.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'basic-form',\r\n  templateUrl: 'basic.component.html',\r\n  styleUrls: ['basic.component.css'],\r\n  providers: [BasicService]\r\n})\r\nexport class BasicComponent {\r\n\r\n  /**\r\n   * Captcha validation messages.\r\n   */\r\n  errorMessages: string;\r\n  successMessages: string;\r\n\r\n  /**\r\n   * BotDetect CAPTCHA component.\r\n   */\r\n  @ViewChild(CaptchaComponent) captchaComponent: CaptchaComponent;\r\n\r\n  constructor(private basicService: BasicService) { }\r\n\r\n  /**\r\n   * Validate captcha at server-side.\r\n   */\r\n  validate(value, valid): void {\r\n\r\n    if (!valid) {\r\n      return;\r\n    }\r\n\r\n    const postData = {\r\n      captchaCode: value.captchaCode,\r\n      captchaId: this.captchaComponent.captchaId\r\n    }\r\n  \r\n    this.basicService.validateCaptcha(postData)\r\n      .subscribe(\r\n        response => {\r\n          if (response.success) {\r\n            // captcha, other form data passed and the data is also stored in database\r\n            this.successMessages = 'Your message was sent successfully!';\r\n            this.errorMessages = '';\r\n          } else {\r\n            // captcha validation failed at server-side\r\n            this.errorMessages = 'CAPTCHA validation falied.';\r\n            this.successMessages = '';\r\n          }\r\n\r\n          // always reload captcha image after validating captcha at server-side \r\n          // in order to update new captcha code for current captcha id\r\n          this.captchaComponent.reloadImage();\r\n        },\r\n        error => {\r\n          throw new Error(error);\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.component.ts","import { Injectable }    from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class BasicService {\r\n\r\n  // basic api url\r\n  basicUrl = 'basic.php';\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  validateCaptcha(data: Object): Observable<any> {\r\n    const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    const options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.post(this.basicUrl, data, options)\r\n      .map((response: Response) => response.json())\r\n      .catch((error:any) => Observable.throw(error.json().error));\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/basic/basic.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\r\\n  display: block;\\r\\n  margin-bottom: 5px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\nlabel span {\\r\\n  display: block;\\r\\n  margin-bottom: 3px;\\r\\n  font-weight: bold;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\ninput[type=\\\"text\\\"],\\r\\ninput[type=\\\"email\\\"] {\\r\\n  width: 261px;\\r\\n  height: 25px;\\r\\n  padding: 0 5px;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n  width: 269px;\\r\\n  height: 50px;\\r\\n}\\r\\n\\r\\n.textarea-error {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.alert {\\r\\n  padding: 5px;\\r\\n  margin-bottom: 10px;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.alert-success {\\r\\n  background: #5db95d;\\r\\n  color: #fff;\\r\\n  border: 1px solid #4e974e;\\r\\n}\\r\\n\\r\\n.alert-error {\\r\\n  background: #db4f4a;\\r\\n  color: #fff;\\r\\n  border: 1px solid #b0352f;\\r\\n}\\r\\n\\r\\n.error {\\r\\n  color: red;\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.list-messages {\\r\\n  margin: 0; padding: 0;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.css\n// module id = ../../../../../src/app/contact/contact.component.css\n// module chunks = main","module.exports = \"<form novalidate (ngSubmit)=\\\"send(contact)\\\" [formGroup]=\\\"contact\\\">\\r\\n\\r\\n  <div class=\\\"alert alert-success\\\" *ngIf=\\\"successMessages\\\">\\r\\n    {{ successMessages }}\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"alert alert-error\\\" *ngIf=\\\"errorMessages\\\">\\r\\n    <ul class=\\\"list-messages\\\">\\r\\n      <li *ngFor=\\\"let error of errorMessages | values\\\">\\r\\n        {{ error }}\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n  <label>\\r\\n    <span>Name:</span>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"name\\\"\\r\\n      formControlName=\\\"name\\\">\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error\\\"\\r\\n    *ngIf=\\\"contact.get('name').hasError('minlength') && contact.get('name').touched\\\"\\r\\n    >\\r\\n    Name must be at least 3 characters.\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <label>\\r\\n    <span>Email:</span>\\r\\n    <input\\r\\n      type=\\\"email\\\"\\r\\n      name=\\\"email\\\"\\r\\n      formControlName=\\\"email\\\">\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error\\\"\\r\\n    *ngIf=\\\"contact.get('email').hasError('pattern') && contact.get('email').touched\\\"\\r\\n    >\\r\\n    Email is invalid.\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <label>\\r\\n    <span>Subject:</span>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"subject\\\"\\r\\n      formControlName=\\\"subject\\\">\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error\\\"\\r\\n    *ngIf=\\\"contact.get('subject').hasError('minlength') && contact.get('subject').touched\\\"\\r\\n    >\\r\\n    Subject must be at least 10 characters.\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <label>\\r\\n    <span>Message:</span>\\r\\n    <textarea\\r\\n      name=\\\"message\\\"\\r\\n      formControlName=\\\"message\\\"></textarea>\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error textarea-error\\\"\\r\\n    *ngIf=\\\"contact.get('message').hasError('minlength') && contact.get('message').touched\\\"\\r\\n    >\\r\\n    Message must be at least 10 characters.\\r\\n  </div>\\r\\n  \\r\\n  <!-- show captcha html -->\\r\\n  <botdetect-captcha styleName=\\\"angularFormCaptcha\\\"></botdetect-captcha>\\r\\n\\r\\n  <label>\\r\\n    <span>Retype the characters from the picture:</span>\\r\\n    <input\\r\\n      type=\\\"text\\\"\\r\\n      id=\\\"captchaCode\\\"\\r\\n      name=\\\"captchaCode\\\"\\r\\n      formControlName=\\\"captchaCode\\\"\\r\\n      correctCaptcha\\r\\n      >\\r\\n  </label>\\r\\n\\r\\n  <div\\r\\n    class=\\\"error\\\"\\r\\n    *ngIf=\\\"contact.get('captchaCode').hasError('incorrectCaptcha') && !contact.get('captchaCode').pristine\\\"\\r\\n    >\\r\\n    Incorrect code.\\r\\n  </div>\\r\\n\\r\\n  <button type=\\\"submit\\\" [disabled]=\\\"contact.invalid\\\">Send</button>\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.html\n// module id = ../../../../../src/app/contact/contact.component.html\n// module chunks = main","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport { CaptchaComponent } from 'angular-captcha';\r\n\r\nimport { Contact } from './contact.interface';\r\nimport { ContactService } from './contact.service';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'contact-form',\r\n  templateUrl: 'contact.component.html',\r\n  styleUrls: ['contact.component.css'],\r\n  providers: [ContactService]\r\n})\r\nexport class ContactComponent implements OnInit {\r\n  \r\n  contact: FormGroup;\r\n\r\n  emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  /**\r\n   * Captcha validation messages.\r\n   */\r\n  errorMessages: Object;\r\n  successMessages: string;\r\n\r\n  /**\r\n   * BotDetect CAPTCHA component.\r\n   */\r\n  @ViewChild(CaptchaComponent) captchaComponent: CaptchaComponent;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private contactService: ContactService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.contact = this.fb.group({\r\n      name: ['', Validators.minLength(3)],\r\n      email: ['', Validators.pattern(this.emailRegex)],\r\n      subject: ['', Validators.minLength(10)],\r\n      message: ['', Validators.minLength(10)],\r\n      captchaCode: [''] // we use 'correctCaptcha' directive to validate captcha code control in the template\r\n    });\r\n  }\r\n\r\n  send({ value, valid }: { value: Contact, valid: boolean }): void {\r\n    if (!valid) {\r\n      return;\r\n    }\r\n\r\n    let postData = value;\r\n    // add captcha captcha id to postData for validating captcha at server-side\r\n    postData['captchaId'] = this.captchaComponent.captchaId;\r\n\r\n    this.contactService.send(postData)\r\n      .subscribe(\r\n        response => {\r\n          if (response.success) {\r\n            // captcha validation passed at server-side\r\n            this.successMessages = 'CAPTCHA validation passed.';\r\n            this.errorMessages = null;\r\n          } else {\r\n            // captcha validation failed at server-side\r\n            this.errorMessages = response.errors;\r\n            this.successMessages = '';\r\n          }\r\n\r\n          // always reload captcha image after validating captcha at server-side \r\n          // in order to update new captcha code for current captcha id\r\n          this.captchaComponent.reloadImage();\r\n        },\r\n        error => {\r\n          throw new Error(error);\r\n        });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.component.ts","import { Injectable }    from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n\r\n  // contact api url\r\n  contactUrl = 'contact.php';\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  send(data: Object): Observable<any> {\r\n    const headers = new Headers({ 'Content-Type': 'application/json' });\r\n    const options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.post(this.contactUrl, data, options)\r\n      .map((response: Response) => response.json())\r\n      .catch((error:any) => Observable.throw(error.json().error));\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/contact/contact.service.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'values' })\r\nexport class ValuesPipe implements PipeTransform {\r\n  transform(value: any): any {\r\n    return Object.keys(value).map(key => value[key]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/app/values.pipe.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/wamp64/www/angular5/botdetect-angular-captcha-example/src/main.ts"],"sourceRoot":"webpack:///"}